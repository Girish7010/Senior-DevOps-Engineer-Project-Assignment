stages: [ci, build, deploy]

variables:
  DOCKER_DRIVER: overlay2
  K8S_NAMESPACE: monitoring-dashboard
  K8S_DIR: k8s
  REGISTRY: $CI_REGISTRY
  IMAGE_NAMESPACE: $CI_PROJECT_NAMESPACE

ci:
  stage: ci
  image: python:3.11
  script:
    - pip install -r backend/requirements.txt pytest flake8
    - (cd backend && flake8 . && pytest -q)
    - apt-get update && apt-get install -y nodejs npm jq
    - (cd frontend && npm ci && (jq -e '.scripts.lint' package.json >/dev/null && npm run lint || true) && (jq -e '.scripts.test' package.json >/dev/null && npm test -- --watchAll=false || true))
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "main"

build:
  stage: build
  image: docker:26.1.3
  services: [ docker:26.1.3-dind ]
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    SHA_TAG: sha-$CI_COMMIT_SHA
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker build -f backend/Dockerfile -t $REGISTRY/$IMAGE_NAMESPACE/md-backend:$SHA_TAG .
    - docker push $REGISTRY/$IMAGE_NAMESPACE/md-backend:$SHA_TAG
    - docker build -f frontend/Dockerfile -t $REGISTRY/$IMAGE_NAMESPACE/md-frontend:$SHA_TAG .
    - docker push $REGISTRY/$IMAGE_NAMESPACE/md-frontend:$SHA_TAG
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "main"

deploy:
  stage: deploy
  image: bitnami/kubectl:1.30
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - echo "$KUBE_CONFIG" > kubeconfig
    - export KUBECONFIG=$PWD/kubeconfig
    - kubectl apply -f $K8S_DIR/namespace.yaml
    - kubectl -n $K8S_NAMESPACE apply -f $K8S_DIR
    - kubectl -n $K8S_NAMESPACE set image deploy/backend backend=$REGISTRY/$IMAGE_NAMESPACE/md-backend:sha-$CI_COMMIT_SHA --record=true || true
    - kubectl -n $K8S_NAMESPACE set image deploy/frontend frontend=$REGISTRY/$IMAGE_NAMESPACE/md-frontend:sha-$CI_COMMIT_SHA --record=true || true
    - kubectl -n $K8S_NAMESPACE rollout status deploy/backend --timeout=120s
    - kubectl -n $K8S_NAMESPACE rollout status deploy/frontend --timeout=120s
